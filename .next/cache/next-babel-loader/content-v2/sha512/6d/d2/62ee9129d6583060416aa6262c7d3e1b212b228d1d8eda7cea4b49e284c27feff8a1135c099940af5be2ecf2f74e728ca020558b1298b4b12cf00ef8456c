{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mahmud/Documents/Code/shopify-embedded-app/pages/edit-products.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Banner, Card, DisplayText, Form, FormLayout, Frame, Layout, Page, PageActions, TextField, Toast } from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nconst UPDATE_PRICE = gql`\n  mutation productVariantUpdate($input: ProductVariantInput!) {\n    productVariantUpdate(input: $input) {\n      product {\n        title\n      }\n      productVariant {\n        id\n        price\n      }\n    }\n  }\n`;\n\nclass EditProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      discount: '',\n      price: '',\n      variantId: '',\n      showToast: false\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n\n    _defineProperty(this, \"itemToBeConsumed\", () => {\n      const item = store.get('item');\n      const price = item.variants.edges[0].node.price;\n      const variantId = item.variants.edges[0].node.id;\n      const discounter = price * 0.1;\n      this.setState({\n        price,\n        variantId\n      });\n      return (price - discounter).toFixed(2);\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      discount: this.itemToBeConsumed()\n    });\n  }\n\n  render() {\n    const {\n      name,\n      price,\n      discount,\n      variantId\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Mutation, {\n      mutation: UPDATE_PRICE,\n      children: (handleSubmit, {\n        error,\n        data\n      }) => {\n        const showError = error && /*#__PURE__*/_jsxDEV(Banner, {\n          status: \"critical\",\n          children: error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this);\n\n        const showToast = data && data.productVariantUpdate && /*#__PURE__*/_jsxDEV(Toast, {\n          content: \"Sucessfully updated\",\n          onDismiss: () => this.setState({\n            showToast: false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this);\n\n        return /*#__PURE__*/_jsxDEV(Frame, {\n          children: /*#__PURE__*/_jsxDEV(Page, {\n            children: /*#__PURE__*/_jsxDEV(Layout, {\n              children: [showToast, /*#__PURE__*/_jsxDEV(Layout.Section, {\n                children: showError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Layout.Section, {\n                children: [/*#__PURE__*/_jsxDEV(DisplayText, {\n                  size: \"large\",\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(Card, {\n                    sectioned: true,\n                    children: /*#__PURE__*/_jsxDEV(FormLayout, {\n                      children: [/*#__PURE__*/_jsxDEV(FormLayout.Group, {\n                        children: [/*#__PURE__*/_jsxDEV(TextField, {\n                          prefix: \"$\",\n                          value: price,\n                          disabled: true,\n                          label: \"Original price\",\n                          type: \"price\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 77,\n                          columnNumber: 21\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          prefix: \"$\",\n                          value: discount,\n                          onChange: this.handleChange('discount'),\n                          label: \"Discounted price\",\n                          type: \"discount\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 84,\n                          columnNumber: 21\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 76,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: \"This sale price will expire in two weeks\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 92,\n                        columnNumber: 19\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 17\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(PageActions, {\n                    primaryAction: [{\n                      content: 'Save',\n                      onAction: () => {\n                        const productVariableInput = {\n                          id: variantId,\n                          price: discount\n                        };\n                        handleSubmit({\n                          variables: {\n                            input: productVariableInput\n                          }\n                        });\n                      }\n                    }],\n                    secondaryActions: [{\n                      content: 'Remove discount'\n                    }]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default EditProduct;","map":{"version":3,"sources":["/Users/mahmud/Documents/Code/shopify-embedded-app/pages/edit-products.js"],"names":["React","Banner","Card","DisplayText","Form","FormLayout","Frame","Layout","Page","PageActions","TextField","Toast","store","gql","Mutation","UPDATE_PRICE","EditProduct","Component","discount","price","variantId","showToast","field","value","setState","item","get","variants","edges","node","id","discounter","toFixed","componentDidMount","itemToBeConsumed","render","name","state","handleSubmit","error","data","showError","message","productVariantUpdate","handleChange","content","onAction","productVariableInput","variables","input"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Banner,\n  Card,\n  DisplayText,\n  Form,\n  FormLayout,\n  Frame,\n  Layout,\n  Page,\n  PageActions,\n  TextField,\n  Toast,\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\n\nconst UPDATE_PRICE = gql`\n  mutation productVariantUpdate($input: ProductVariantInput!) {\n    productVariantUpdate(input: $input) {\n      product {\n        title\n      }\n      productVariant {\n        id\n        price\n      }\n    }\n  }\n`;\n\nclass EditProduct extends React.Component {\n  state = {\n    discount: '',\n    price: '',\n    variantId: '',\n    showToast: false,\n  };\n\n  componentDidMount() {\n    this.setState({ discount: this.itemToBeConsumed() });\n  }\n\n  render() {\n    const { name, price, discount, variantId } = this.state;\n\n    return (\n        <Mutation\n          mutation={UPDATE_PRICE}\n        >\n          {(handleSubmit, {error, data}) => {\n              const showError = error && (\n                <Banner status=\"critical\">{error.message}</Banner>\n              );\n              const showToast = data && data.productVariantUpdate && (\n                <Toast\n                  content=\"Sucessfully updated\"\n                  onDismiss={() => this.setState({ showToast: false })}\n                />\n              );\n\n    return (\n        <Frame>\n      <Page>\n        <Layout>\n        {showToast}\n                  <Layout.Section>\n                    {showError}\n                  </Layout.Section>\n          <Layout.Section>\n            <DisplayText size=\"large\">{name}</DisplayText>\n            <Form>\n              <Card sectioned>\n                <FormLayout>\n                  <FormLayout.Group>\n                    <TextField\n                      prefix=\"$\"\n                      value={price}\n                      disabled={true}\n                      label=\"Original price\"\n                      type=\"price\"\n                    />\n                    <TextField\n                      prefix=\"$\"\n                      value={discount}\n                      onChange={this.handleChange('discount')}\n                      label=\"Discounted price\"\n                      type=\"discount\"\n                    />\n                  </FormLayout.Group>\n                  <p>\n                    This sale price will expire in two weeks\n                  </p>\n                </FormLayout>\n              </Card>\n              <PageActions\n                primaryAction={[\n                  {\n                    content: 'Save',\n                    onAction: () => {\n                        const productVariableInput = {\n                            id: variantId,\n                            price: discount,\n                        };\n                        handleSubmit({\n                            variables: { input: productVariableInput },\n                        });\n                    }\n                  }\n                ]}\n                secondaryActions={[\n                  {\n                    content: 'Remove discount'\n                  }\n                ]}\n              />\n            </Form>\n          </Layout.Section>\n        </Layout>\n      </Page>\n      </Frame>\n    );\n}}\n</Mutation>\n);\n  }\n\n  handleChange = (field) => {\n    return (value) => this.setState({ [field]: value });\n  };\n\n  itemToBeConsumed = () => {\n    const item = store.get('item');\n    const price = item.variants.edges[0].node.price;\n    const variantId = item.variants.edges[0].node.id;\n    const discounter = price * 0.1;\n    this.setState({ price, variantId });\n    return (price - discounter).toFixed(2);\n  };\n}\n\nexport default EditProduct;"]},"metadata":{},"sourceType":"module"}